{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { React, useState } from 'react';\nimport Row from \"../components/Row\";\nimport Player from \"./Player\";\nimport PlayerMinimized from \"./playerMinimized\";\nimport SpotifySearch from \"../data/spotifyApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Search = function Search(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    data = _useState.data,\n    setData = _useState.setData;\n  var _useState2 = useState(''),\n    query = _useState2.query,\n    setQuery = _useState2.setQuery;\n  data = SpotifySearch(query);\n  console.log(data);\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      onChange: function onChange(text) {\n        return query = text;\n      }\n    }), _jsxs(ScrollView, {\n      overScrollMode: \"never\",\n      children: [_jsx(Text, {\n        children: \"Resultados\"\n      }), _jsx(Row, {\n        navigation: navigation,\n        tituloSeccion: \"Canciones\",\n        data: data\n      })]\n    })]\n  });\n};\nexport default Search;","map":{"version":3,"names":["React","useState","Row","Player","PlayerMinimized","SpotifySearch","jsx","_jsx","jsxs","_jsxs","Search","_ref","navigation","_useState","data","setData","_useState2","query","setQuery","console","log","View","children","TextInput","onChange","text","ScrollView","overScrollMode","Text","tituloSeccion"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/screens/Search.js"],"sourcesContent":["import {View, Text, ScrollView, TextInput} from 'react-native';\r\nimport {React, useState } from 'react';\r\nimport Row from '../components/Row';\r\nimport Player from './Player';\r\nimport PlayerMinimized from './playerMinimized';\r\nimport SpotifySearch from '../data/spotifyApi'\r\n\r\nconst Search = ({ navigation }) => {\r\n    let {data, setData} = useState(null)\r\n    let {query, setQuery} = useState('')\r\n    data = SpotifySearch(query)\r\n    // setData(data)\r\n    console.log(data)\r\n    return (\r\n        <View>\r\n            <TextInput onChange={(text)=>(query = text)} ></TextInput>\r\n            <ScrollView overScrollMode=\"never\">\r\n                <Text>Resultados</Text>\r\n                <Row navigation={navigation} tituloSeccion=\"Canciones\" data={data} />\r\n            </ScrollView>\r\n            {/* <Player/> */}\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default Search;\r\n\r\n"],"mappings":";;;;AACA,SAAQA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACtC,OAAOC,GAAG;AACV,OAAOC,MAAM;AACb,OAAOC,eAAe;AACtB,OAAOC,aAAa;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACxB,IAAAC,SAAA,GAAsBZ,QAAQ,CAAC,IAAI,CAAC;IAA/Ba,IAAI,GAAAD,SAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,SAAA,CAAPE,OAAO;EAClB,IAAAC,UAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAA/BgB,KAAK,GAAAD,UAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,UAAA,CAARE,QAAQ;EACpBJ,IAAI,GAAGT,aAAa,CAACY,KAAK,CAAC;EAE3BE,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACjB,OACIL,KAAA,CAACY,IAAI;IAAAC,QAAA,GACDf,IAAA,CAACgB,SAAS;MAACC,QAAQ,EAAE,SAAAA,SAACC,IAAI;QAAA,OAAIR,KAAK,GAAGQ,IAAI;MAAA;IAAE,CAAa,CAAC,EAC1DhB,KAAA,CAACiB,UAAU;MAACC,cAAc,EAAC,OAAO;MAAAL,QAAA,GAC9Bf,IAAA,CAACqB,IAAI;QAAAN,QAAA,EAAC;MAAU,CAAM,CAAC,EACvBf,IAAA,CAACL,GAAG;QAACU,UAAU,EAAEA,UAAW;QAACiB,aAAa,EAAC,WAAW;QAACf,IAAI,EAAEA;MAAK,CAAE,CAAC;IAAA,CAC7D,CAAC;EAAA,CAEX,CAAC;AAEf,CAAC;AAGD,eAAeJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}