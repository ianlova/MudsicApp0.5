{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { React, useRef } from 'react';\nimport Constants from 'expo-constants';\nimport Item from \"./Item\";\nimport Row from \"./Row\";\nimport Reproductor from \"../screens/Player\";\nimport Profile from \"../screens/ProfileScreen\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport PlayerMinimized from \"./playerMinimized\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { Rnd } from 'react-rnd';\nimport DraggableComponent from \"../components/moving\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableNativeFeedbackBase } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { BottomTab } from \"./Navigator\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport ListaUsuarios from \"../backend/verUsuarios\";\nimport stacks from \"../backend/stack\";\nimport Login from \"../backend/Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\nvar placeholderData = [1, 2, 3, 4, 5, 6, 7, 8];\nvar Main = function Main() {\n  var pan = useRef(new Animated.ValueXY()).current;\n  var lastY;\n  var movido;\n  var panResponder = PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(event, gestureState) {\n      if (movido) {\n        console.log(pan.getLayout());\n        pan.y.setValue(lastY);\n        Animated.event([null, {\n          dy: pan.y\n        }], {\n          useNativeDriver: false\n        })(event, gestureState);\n        movido = false;\n      }\n      Animated.event([null, {\n        dy: pan.y\n      }], {\n        useNativeDriver: false\n      })(event, gestureState);\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      Animated.spring(pan.y, {\n        toValue: pan.y._value < windowHeight / 300 ? windowHeight * -1.012 : windowHeight * -0.0002950,\n        useNativeDriver: false\n      }).start(function () {\n        movido = true;\n        lastY = pan.y._value;\n        console.log(lastY);\n      });\n    }\n  });\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"login\",\n        component: Login,\n        options: {\n          title: \"iniciar sesion...\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"main\",\n        options: {\n          title: \"iniciar sesion...\"\n        }\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1\n      },\n      children: _jsx(NavigationContainer, {\n        style: styles.container,\n        children: _jsx(BottomTab, {})\n      })\n    }), _jsxs(Animated.View, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n      style: [pan.getLayout(), {\n        flex: 0.0015,\n        width: '100%',\n        height: '100000%'\n      }],\n      children: [_jsx(PlayerMinimized, {}), _jsx(View, {\n        style: {\n          height: '1000%',\n          position: 'absolute',\n          height: windowHeight + windowHeight * 0.1,\n          width: windowWidth\n        },\n        children: _jsx(Reproductor, {})\n      })]\n    }))]\n  });\n};\nexport default Main;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100%',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative'\n  }\n});","map":{"version":3,"names":["React","useRef","Constants","Item","Row","Reproductor","Profile","createBottomTabNavigator","PlayerMinimized","createMaterialBottomTabNavigator","Rnd","DraggableComponent","StyleSheet","Text","View","Image","Alert","TouchableNativeFeedback","FlatList","TouchableNativeFeedbackBase","ScrollView","NavigationContainer","BottomTab","HomeScreen","Animated","PanResponder","Dimensions","createStackNavigator","ListaUsuarios","stacks","Login","jsx","_jsx","jsxs","_jsxs","Stack","windowHeight","get","height","windowWidth","width","placeholderData","Main","pan","ValueXY","current","lastY","movido","panResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gestureState","console","log","getLayout","y","setValue","dy","useNativeDriver","onPanResponderRelease","spring","toValue","_value","start","style","flex","children","Navigator","Screen","name","component","options","title","styles","container","_objectSpread","panHandlers","position","justifyContent","alignItems"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/components/Main.js"],"sourcesContent":["import {React, useRef} from 'react'\r\nimport Constants from 'expo-constants'\r\nimport Item from './Item'\r\nimport Row from './Row'\r\nimport Reproductor from '../screens/Player'\r\nimport Profile from '../screens/ProfileScreen'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport PlayerMinimized from './playerMinimized'\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\nimport { Rnd } from 'react-rnd';\r\nimport DraggableComponent from '../components/moving'\r\nimport { StyleSheet, Text, View, Image, Alert, TouchableNativeFeedback, FlatList, TouchableNativeFeedbackBase, ScrollView } from 'react-native'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { BottomTab } from './Navigator';\r\nimport HomeScreen from '../screens/HomeScreen'\r\nimport { Animated, PanResponder, Dimensions } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport ListaUsuarios from '../backend/verUsuarios';\r\nimport stacks from '../backend/stack'\r\n// import Form from './backend/Form';\r\nimport Login from '../backend/Login';\r\n\r\nconst Stack = createStackNavigator()\r\n\r\n\r\n\r\n\r\nconst windowHeight = Dimensions.get('window').height;\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst placeholderData = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst Main = () => {\r\n    const pan = useRef(new Animated.ValueXY()).current;\r\n    let lastY\r\n    let movido\r\n    const panResponder = PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderMove: (event, gestureState) => {\r\n        if (movido) {\r\n          console.log(pan.getLayout())\r\n          pan.y.setValue(lastY)\r\n          Animated.event([null, { dy: pan.y }], { useNativeDriver: false })(event, gestureState);\r\n          movido=false\r\n        }\r\n          // console.log(pan.getLayout())\r\n          // pan.y.setValue(lastY)\r\n          Animated.event([null, { dy: pan.y }], { useNativeDriver: false })(event, gestureState);\r\n        // console.log(gestureState.dx)\r\n      },\r\n      onPanResponderRelease: () => {\r\n        Animated.spring(pan.y, {\r\n          toValue: pan.y._value < (windowHeight / 300) ? (windowHeight*-1.012) : (windowHeight*-0.0002950),\r\n          useNativeDriver: false,\r\n        }).start(() => {\r\n          movido = true\r\n          lastY = pan.y._value\r\n          console.log(lastY)\r\n          // Esto se ejecuta después de la animación\r\n          // pan.y.setValue(pan.getLayout);  // Restablece pan.y a 0\r\n          // console.log(pan.y._value)\r\n        });\r\n      },\r\n    });\r\n  \r\n    return(\r\n        <View style={{flex:1}}>\r\n          \r\n          <Stack.Navigator>\r\n              <Stack.Screen \r\n              name=\"login\"\r\n              component={Login}\r\n              options={{title: \"iniciar sesion...\"}}/>\r\n              <Stack.Screen\r\n              name=\"main\"\r\n              options={{title: \"iniciar sesion...\"}}>\r\n              </Stack.Screen>\r\n          </Stack.Navigator>\r\n                <View style={{flex: 1}}>\r\n                  <NavigationContainer style={styles.container}>\r\n                    <BottomTab/>  \r\n                    {/* <PlayerMinimized/> */}\r\n                  </NavigationContainer>\r\n                </View>\r\n                <Animated.View {...panResponder.panHandlers} style={[pan.getLayout(), { flex: 0.0015, width: '100%', height: '100000%'}]}>\r\n                    <PlayerMinimized></PlayerMinimized>\r\n                    <View style={{height:'1000%', position:'absolute', height: (windowHeight + (windowHeight*0.1)), width: windowWidth }}>\r\n                        <Reproductor></Reproductor>\r\n                    </View>\r\n                </Animated.View>\r\n        </View>\r\n    )\r\n} \r\nexport default Main\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: '100%',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative'\r\n    },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}