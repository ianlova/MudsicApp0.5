{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Constants from 'expo-constants';\nimport Item from \"./Item\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableNativeFeedbackBase } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Row = function Row(_ref) {\n  var titleSeccion = _ref.titleSeccion,\n    navigation = _ref.navigation,\n    data = _ref.data;\n  var placeholderData = data && data.items;\n  console.log(tituloSeccion);\n  console.log(placeholderData);\n  return _jsxs(View, {\n    overScrollMode: \"never\",\n    children: [_jsx(Text, {\n      style: RowStyles.titleSection,\n      children: titleSeccionSeccion\n    }), _jsx(FlatList, {\n      overScrollMode: \"never\",\n      data: placeholderData,\n      horizontal: true,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        switch (key) {\n          case value:\n            break;\n          default:\n            break;\n        }\n        return _jsx(View, {\n          children: _jsx(Item, {\n            img: item.album.images[0].url,\n            nombreItem: item.name,\n            descItem: item.artists[0].name\n          }, item)\n        });\n      }\n    })]\n  });\n};\nexport default Row;\nvar RowStyles = StyleSheet.create({\n  titleSection: {\n    fontSize: 22,\n    backgroundColor: 'black',\n    color: 'white',\n    marginTop: 20,\n    paddingLeft: 10,\n    borderRadius: 3,\n    textTransform: 'capitalize'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Constants","Item","StyleSheet","Text","View","Alert","TouchableNativeFeedback","FlatList","TouchableNativeFeedbackBase","jsx","_jsx","jsxs","_jsxs","Row","_ref","titleSeccion","navigation","data","placeholderData","items","console","log","tituloSeccion","overScrollMode","children","style","RowStyles","titleSection","titleSeccionSeccion","horizontal","renderItem","_ref2","item","key","value","img","album","images","url","nombreItem","name","descItem","artists","create","fontSize","backgroundColor","color","marginTop","paddingLeft","borderRadius","textTransform"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Constants from 'expo-constants'\r\nimport Item from './Item'\r\nimport { StyleSheet, Text, View, Alert, TouchableNativeFeedback, FlatList, TouchableNativeFeedbackBase } from 'react-native'\r\n\r\n\r\nconst Row = ({ titleSeccion, navigation, data }) => {\r\n// const placeholderData = [1, 2, 3, 4, 5, 6, 7, 8];\r\nlet placeholderData = data && data.items;\r\n    console.log(tituloSeccion); // Debería imprimir: 'Canciones'\r\n    console.log(placeholderData); \r\n    // Ahora también puedes usar navigation.navigate, navigation.push, etc.\r\n    return(\r\n        <View overScrollMode='never'>\r\n            <Text\r\n            style={RowStyles.titleSection}\r\n            >{titleSeccionSeccion}</Text>\r\n            <FlatList overScrollMode='never'\r\n                // data={data && data.data.tracks}\r\n                data={placeholderData}\r\n                horizontal={true}\r\n                renderItem={({ item }) => {\r\n                    switch (key) {\r\n                        case value:\r\n                            \r\n                            break;\r\n                    \r\n                        default:\r\n                            break;\r\n                    }\r\n                return(\r\n                    <View>\r\n                        <Item key={item} img={item.album.images[0].url} nombreItem={item.name} descItem={item.artists[0].name} />                        \r\n                    </View>\r\n                )\r\n            }\r\n\r\n                }\r\n                \r\n            />    \r\n        </View>  \r\n    )\r\n    \r\n}\r\n\r\nexport default Row\r\n\r\nconst RowStyles = StyleSheet.create({    \r\n    titleSection:{\r\n        fontSize: 22,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        marginTop: 20, \r\n        paddingLeft: 10,\r\n        borderRadius: 3,\r\n        textTransform: 'capitalize'        \r\n    }\r\n})"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,IAAI;AAAc,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,QAAA;AAAA,SACkDC,2BAA2B;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtG,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAAC,IAAA,EAA2C;EAAA,IAArCC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;EAE7C,IAAIC,eAAe,GAAGD,IAAI,IAAIA,IAAI,CAACE,KAAK;EACpCC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;EAC1BF,OAAO,CAACC,GAAG,CAACH,eAAe,CAAC;EAE5B,OACIN,KAAA,CAACR,IAAI;IAACmB,cAAc,EAAC,OAAO;IAAAC,QAAA,GACxBd,IAAA,CAACP,IAAI;MACLsB,KAAK,EAAEC,SAAS,CAACC,YAAa;MAAAH,QAAA,EAC5BI;IAAmB,CAAO,CAAC,EAC7BlB,IAAA,CAACH,QAAQ;MAACgB,cAAc,EAAC,OAAO;MAE5BN,IAAI,EAAEC,eAAgB;MACtBW,UAAU,EAAE,IAAK;MACjBC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAc;QAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QACf,QAAQC,GAAG;UACP,KAAKC,KAAK;YAEN;UAEJ;YACI;QACR;QACJ,OACIxB,IAAA,CAACN,IAAI;UAAAoB,QAAA,EACDd,IAAA,CAACT,IAAI;YAAYkC,GAAG,EAAEH,IAAI,CAACI,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;YAACC,UAAU,EAAEP,IAAI,CAACQ,IAAK;YAACC,QAAQ,EAAET,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAACF;UAAK,GAA3FR,IAA6F;QAAC,CACvG,CAAC;MAEf;IAEK,CAEJ,CAAC;EAAA,CACA,CAAC;AAGf,CAAC;AAED,eAAenB,GAAG;AAElB,IAAMa,SAAS,GAAGxB,UAAU,CAACyC,MAAM,CAAC;EAChChB,YAAY,EAAC;IACTiB,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE,OAAO;IACxBC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE;EACnB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}