{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { Buffer } from 'buffer';\nimport { getToken } from \"./spotifyToken\";\nglobal.Buffer = Buffer;\nvar genres = [\"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\", \"breakbeat\", \"british\", \"cantopop\", \"chicago-house\", \"children\", \"chill\", \"classical\", \"club\", \"comedy\", \"country\", \"dance\", \"dancehall\", \"death-metal\", \"deep-house\", \"detroit-techno\", \"disco\", \"disney\", \"drum-and-bass\", \"dub\", \"dubstep\", \"edm\", \"electro\", \"electronic\", \"emo\", \"folk\", \"forro\", \"french\", \"funk\", \"garage\", \"german\", \"gospel\", \"goth\", \"grindcore\", \"groove\", \"grunge\", \"guitar\", \"happy\", \"hard-rock\", \"hardcore\", \"hardstyle\", \"heavy-metal\", \"hip-hop\", \"holidays\", \"honky-tonk\", \"house\", \"idm\", \"indian\", \"indie\", \"indie-pop\", \"industrial\", \"iranian\", \"j-dance\", \"j-idol\", \"j-pop\", \"j-rock\", \"jazz\", \"k-pop\", \"kids\", \"latin\", \"latino\", \"malay\", \"mandopop\", \"metal\", \"metal-misc\", \"metalcore\", \"minimal-techno\", \"movies\", \"mpb\", \"new-age\", \"new-release\", \"opera\", \"pagode\", \"party\", \"philippines-opm\", \"piano\", \"pop\", \"pop-film\", \"post-dubstep\", \"power-pop\", \"progressive-house\", \"psych-rock\", \"punk\", \"punk-rock\", \"r-n-b\", \"rainy-day\", \"reggae\", \"reggaeton\", \"road-trip\", \"rock\", \"rock-n-roll\", \"rockabilly\", \"romance\", \"sad\", \"salsa\", \"samba\", \"sertanejo\", \"show-tunes\", \"singer-songwriter\", \"ska\", \"sleep\", \"songwriter\", \"soul\", \"soundtracks\", \"spanish\", \"study\", \"summer\", \"swedish\", \"synth-pop\", \"tango\", \"techno\", \"trance\", \"trip-hop\", \"turkish\", \"work-out\", \"world-music\"];\nvar token = '';\nvar randomIndex = Math.floor(Math.random() * (genres.length - 1));\nexport function SpotifyRecommendations() {\n  return _SpotifyRecommendations.apply(this, arguments);\n}\nfunction _SpotifyRecommendations() {\n  _SpotifyRecommendations = _asyncToGenerator(function* () {\n    var data;\n    if (token == '') {\n      token = yield getToken();\n    }\n    if (token != '') {\n      try {\n        var _randomIndex = Math.floor(Math.random() * (genres.length - 1));\n        var response = yield fetch(`https://api.spotify.com/v1/search?q=${genres[_randomIndex]}&type=album%2Cplaylist%2Cartist%2Ctrack&limit=50`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        var json = yield response.json();\n        console.log(json);\n        data = json;\n        return data.tracks;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  return _SpotifyRecommendations.apply(this, arguments);\n}\n;\nexport default SpotifyRecommendations;","map":{"version":3,"names":["React","useEffect","useState","Text","View","axios","qs","Buffer","getToken","global","genres","token","randomIndex","Math","floor","random","length","SpotifyRecommendations","_SpotifyRecommendations","apply","arguments","_asyncToGenerator","data","response","fetch","method","headers","json","console","log","tracks","error"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/data/SpotifyRecommendations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { Buffer } from 'buffer';\r\nimport { getToken } from './spotifyToken';\r\nglobal.Buffer = Buffer;\r\n\r\n\r\nlet genres = [\r\n    \"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\",\"breakbeat\",\"british\",\"cantopop\",\"chicago-house\",\"children\",\"chill\",\"classical\",\"club\",\"comedy\",\"country\",\"dance\",\"dancehall\",\"death-metal\",\"deep-house\",\"detroit-techno\",\"disco\",\"disney\",\"drum-and-bass\",\"dub\",\"dubstep\",\"edm\",\"electro\",\"electronic\",\"emo\",\"folk\",\"forro\",\"french\",\"funk\",\"garage\",\"german\",\"gospel\",\"goth\",\"grindcore\",\"groove\",\"grunge\",\"guitar\",\"happy\",\"hard-rock\",\"hardcore\",\"hardstyle\",\"heavy-metal\",\"hip-hop\",\"holidays\",\"honky-tonk\",\"house\",\"idm\",\"indian\",\"indie\",\"indie-pop\",\"industrial\",\"iranian\",\"j-dance\",\"j-idol\",\"j-pop\",\"j-rock\",\"jazz\",\"k-pop\",\"kids\",\"latin\",\"latino\",\"malay\",\"mandopop\",\"metal\",\"metal-misc\",\"metalcore\",\"minimal-techno\",\"movies\",\"mpb\",\"new-age\",\"new-release\",\"opera\",\"pagode\",\"party\",\"philippines-opm\",\"piano\",\"pop\",\"pop-film\",\"post-dubstep\",\"power-pop\",\"progressive-house\",\"psych-rock\",\"punk\",\"punk-rock\",\"r-n-b\",\"rainy-day\",\"reggae\",\"reggaeton\",\"road-trip\",\"rock\",\"rock-n-roll\",\"rockabilly\",\"romance\",\"sad\",\"salsa\",\"samba\",\"sertanejo\",\"show-tunes\",\"singer-songwriter\",\"ska\",\"sleep\",\"songwriter\",\"soul\",\"soundtracks\",\"spanish\",\"study\",\"summer\",\"swedish\",\"synth-pop\",\"tango\",\"techno\",\"trance\",\"trip-hop\",\"turkish\",\"work-out\",\"world-music\"\r\n]\r\nlet token =''\r\nconst randomIndex = Math.floor(Math.random() * (genres.length -1));\r\n\r\n\r\nexport async function SpotifyRecommendations() {\r\n    let data\r\n            if (token == '') {\r\n                token = await getToken()\r\n            }\r\n            if (token != '') {\r\n                try {\r\n                    const randomIndex = Math.floor(Math.random() * (genres.length -1));\r\n                    const response = await fetch(`https://api.spotify.com/v1/search?q=${genres[randomIndex]}&type=album%2Cplaylist%2Cartist%2Ctrack&limit=50`, {\r\n                            method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                    });\r\n                    const json = await response.json();\r\n                    console.log(json)\r\n                    data = (json);\r\n                    return (data.tracks);\r\n                } catch (error) {\r\n                        console.error(error);\r\n                        // return json;\r\n                }\r\n            }\r\n};\r\n\r\nexport default SpotifyRecommendations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}