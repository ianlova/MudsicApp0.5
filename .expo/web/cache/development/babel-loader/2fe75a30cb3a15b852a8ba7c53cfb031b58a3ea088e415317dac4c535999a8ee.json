{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from 'expo-av';\nimport Constants from 'expo-constants';\nimport Item from \"./Item\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableNativeFeedbackBase } from \"react-native-web/dist/index\";\nimport * as Shazam from \"../data/shazamSearch\";\nimport { shadow } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Row = function Row(_ref) {\n  var titleSection = _ref.titleSection,\n    navigation = _ref.navigation,\n    data = _ref.data;\n  var _useState = useState(new Audio.Sound()),\n    _useState2 = _slicedToArray(_useState, 1),\n    soundObject = _useState2[0];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    status = _useState4[0],\n    setSatus = _useState4[1];\n  var placeholderData = data && data.items;\n  function Preview(_x) {\n    return _Preview.apply(this, arguments);\n  }\n  function _Preview() {\n    _Preview = _asyncToGenerator(function* (url) {\n      try {\n        if (status.isLoaded) {\n          yield soundObject.unloadAsync();\n        }\n        if (url == null) {\n          url = 'https://p.scdn.co/mp3-preview/fbef3cdacb1636624f4a3bbc2050b008414dd1d7?cid=eed31a43318f478ba48917070c9c3b37';\n        }\n        yield soundObject.loadAsync({\n          uri: url\n        });\n        yield soundObject.setVolumeAsync(0);\n        yield soundObject.playAsync();\n        var volume = 0;\n        var increaseVolumeInterval = setInterval(_asyncToGenerator(function* () {\n          volume += 0.005;\n          if (volume > 0.5) {\n            volume = 0.5;\n            clearInterval(increaseVolumeInterval);\n          }\n          yield soundObject.setVolumeAsync(volume);\n        }), 100);\n        setSatus(yield soundObject.getStatusAsync());\n        console.log(status);\n      } catch (error) {\n        console.log('Error al reproducir el audio', error);\n      }\n    });\n    return _Preview.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    overScrollMode: \"never\",\n    children: [_jsx(Text, {\n      style: RowStyles.titleSection,\n      children: titleSection\n    }), _jsx(FlatList, {\n      overScrollMode: \"never\",\n      data: placeholderData,\n      horizontal: true,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        switch (titleSection) {\n          case 'Artistas':\n            return _jsx(View, {\n              onStartShouldSetResponder: _asyncToGenerator(function* () {}),\n              onTouchEnd: function onTouchEnd() {\n                return console.log('Artista');\n              },\n              children: _jsx(Item, {\n                img: item.images && item.images[0] && item.images[0].url,\n                nombreItem: item.name,\n                descItem: item.genres\n              }, item)\n            });\n            break;\n          case 'Canciones':\n            return _jsx(View, {\n              onStartShouldSetResponder: _asyncToGenerator(function* () {\n                var url;\n                if (item.preview_url) {\n                  url = yield Shazam.search(item.name);\n                } else {\n                  Preview(item.p);\n                }\n              }),\n              onTouchEnd: function onTouchEnd() {\n                return console.log('Cancion');\n              },\n              children: _jsx(Item, {\n                img: item.album.images[0].url,\n                nombreItem: item.name,\n                descItem: item.artists[0].name\n              }, item)\n            });\n            break;\n          case 'Albumes':\n            return _jsx(View, {\n              onStartShouldSetResponder: function onStartShouldSetResponder() {\n                return console.log('Preview');\n              },\n              onTouchEnd: function onTouchEnd() {\n                return console.log('Album');\n              },\n              children: _jsx(Item, {\n                img: item.images[0].url,\n                nombreItem: item.name,\n                descItem: item.artists.map(function (artist) {\n                  return artist.name;\n                }).join(', ')\n              }, item)\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    })]\n  });\n};\nexport default Row;\nvar RowStyles = StyleSheet.create({\n  titleSection: {\n    fontSize: 22,\n    backgroundColor: 'black',\n    color: 'white',\n    marginTop: 20,\n    paddingLeft: 10,\n    borderRadius: 3,\n    textTransform: 'capitalize'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Button","Audio","Constants","Item","StyleSheet","Text","View","Alert","TouchableNativeFeedback","FlatList","TouchableNativeFeedbackBase","Shazam","shadow","jsx","_jsx","jsxs","_jsxs","Row","_ref","titleSection","navigation","data","_useState","Sound","_useState2","_slicedToArray","soundObject","_useState3","_useState4","status","setSatus","placeholderData","items","Preview","_x","_Preview","apply","arguments","_asyncToGenerator","url","isLoaded","unloadAsync","loadAsync","uri","setVolumeAsync","playAsync","volume","increaseVolumeInterval","setInterval","clearInterval","getStatusAsync","console","log","error","overScrollMode","children","style","RowStyles","horizontal","renderItem","_ref2","item","onStartShouldSetResponder","onTouchEnd","img","images","nombreItem","name","descItem","genres","preview_url","search","p","album","artists","map","artist","join","create","fontSize","backgroundColor","color","marginTop","paddingLeft","borderRadius","textTransform"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/components/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {Button} from 'react-native';\r\nimport {Audio} from 'expo-av'\r\nimport Constants from 'expo-constants'\r\nimport Item from './Item'\r\nimport { StyleSheet, Text, View, Alert, TouchableNativeFeedback, FlatList, TouchableNativeFeedbackBase } from 'react-native'\r\nimport * as Shazam from '../data/shazamSearch'\r\nimport { shadow } from 'react-native-paper';\r\n\r\n\r\n\r\n// // Para pausar el audio\r\n// try {\r\n//   await soundObject.pauseAsync();\r\n// } catch (error) {\r\n//   console.log('Error al pausar el audio', error);\r\n// }\r\n\r\n// // Para reanudar el audio\r\n// try {\r\n//   await soundObject.playAsync();\r\n// } catch (error) {\r\n//   console.log('Error al reanudar el audio', error);\r\n// }\r\n\r\n// // Para ajustar el volumen\r\n// try {\r\n//   await soundObject.setVolumeAsync(0.5); // Establece el volumen al 50%\r\n// } catch (error) {\r\n//   console.log('Error al ajustar el volumen', error);\r\n// }\r\n\r\nconst Row = ({ titleSection, navigation, data }) => {\r\nconst [soundObject] = useState(new Audio.Sound());\r\nconst [status, setSatus] = useState({});\r\n// const placeholderData = [1, 2, 3, 4, 5, 6, 7, 8];\r\nlet placeholderData = data && data.items;\r\n    // console.log(titleSection);\r\n    // console.log(placeholderData); \r\n    async function Preview(url) {\r\n        // Para cargar y reproducir el audio\r\n            // await setSoundObject()\r\n        try {\r\n            if (status.isLoaded) {\r\n                // await soundObject.stopAsync();\r\n                await soundObject.unloadAsync();\r\n            }\r\n            if (url == null) {\r\n                url = 'https://p.scdn.co/mp3-preview/fbef3cdacb1636624f4a3bbc2050b008414dd1d7?cid=eed31a43318f478ba48917070c9c3b37'\r\n                // url = await search(item.name)\r\n            }\r\n            await soundObject.loadAsync({uri: url});\r\n            await soundObject.setVolumeAsync(0); \r\n            await soundObject.playAsync();\r\n            let volume = 0;\r\n            const increaseVolumeInterval = setInterval(async () => {\r\n            volume += 0.005;\r\n            if (volume > 0.5) {\r\n                volume = 0.5;\r\n                clearInterval(increaseVolumeInterval);\r\n            }\r\n            await soundObject.setVolumeAsync(volume);\r\n            }, 100);\r\n            setSatus(await soundObject.getStatusAsync())\r\n            console.log(status)\r\n        } catch (error) {\r\n            console.log('Error al reproducir el audio', error);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <View overScrollMode='never'>\r\n            <Text\r\n            style={RowStyles.titleSection}\r\n            >{titleSection}</Text>\r\n            <FlatList overScrollMode='never'\r\n                // data={data && data.data.tracks}\r\n                data={placeholderData}\r\n                horizontal={true}\r\n                renderItem={({ item }) => {\r\n                    switch (titleSection) {\r\n                        case 'Artistas':\r\n                            return(                \r\n                                <View onStartShouldSetResponder={async ()=>{\r\n                                        // link = await Shazam.search(item.name).artists[0];\r\n\r\n                                    }\r\n                                    } onTouchEnd={()=>console.log('Artista')}>\r\n                                    {/* <Button title='a' onPress={()=>console.log('precionado')} > */}\r\n                                    <Item key={item} img={item.images&&item.images[0]&&item.images[0].url} nombreItem={item.name} descItem={item.genres} />        \r\n                                    {/* </Button>                 */}\r\n                                </View>\r\n                                )\r\n                            break;\r\n                        case 'Canciones':\r\n                            \r\n                            return(                \r\n                                <View onStartShouldSetResponder={async ()=>{\r\n                                    let url\r\n                                    if (item.preview_url) {\r\n                                        url = await Shazam.search(item.name)\r\n                                    }else{\r\n                                        Preview(item.p)\r\n                                    }}} onTouchEnd={()=>console.log('Cancion')}>\r\n                                    <Item key={item} img={item.album.images[0].url} nombreItem={item.name} descItem={item.artists[0].name} />                        \r\n                                </View>\r\n                                )\r\n                            break;\r\n                        case 'Albumes':\r\n                            return(\r\n                                <View onStartShouldSetResponder={()=>console.log('Preview')} onTouchEnd={()=>console.log('Album')}>\r\n                                    <Item key={item} img={item.images[0].url} nombreItem={item.name} descItem={item.artists.map(artist => artist.name).join(', ')} />\r\n                                </View>\r\n                            )\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                // return(\r\n                //     <View>\r\n                //         <Item key={item} img={item.album.images[0].url} nombreItem={item.name} descItem={item.artists[0].name} />                        \r\n                //     </View>\r\n                // )\r\n            }\r\n\r\n                }\r\n                \r\n            />    \r\n        </View>  \r\n    )\r\n    \r\n}\r\n\r\nexport default Row\r\n\r\nconst RowStyles = StyleSheet.create({    \r\n    titleSection:{\r\n        fontSize: 22,\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        marginTop: 20, \r\n        paddingLeft: 10,\r\n        borderRadius: 3,\r\n        textTransform: 'capitalize'        \r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}