{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { Buffer } from 'buffer';\nglobal.Buffer = Buffer;\nvar genres = [\"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\", \"breakbeat\", \"british\", \"cantopop\", \"chicago-house\", \"children\", \"chill\", \"classical\", \"club\", \"comedy\", \"country\", \"dance\", \"dancehall\", \"death-metal\", \"deep-house\", \"detroit-techno\", \"disco\", \"disney\", \"drum-and-bass\", \"dub\", \"dubstep\", \"edm\", \"electro\", \"electronic\", \"emo\", \"folk\", \"forro\", \"french\", \"funk\", \"garage\", \"german\", \"gospel\", \"goth\", \"grindcore\", \"groove\", \"grunge\", \"guitar\", \"happy\", \"hard-rock\", \"hardcore\", \"hardstyle\", \"heavy-metal\", \"hip-hop\", \"holidays\", \"honky-tonk\", \"house\", \"idm\", \"indian\", \"indie\", \"indie-pop\", \"industrial\", \"iranian\", \"j-dance\", \"j-idol\", \"j-pop\", \"j-rock\", \"jazz\", \"k-pop\", \"kids\", \"latin\", \"latino\", \"malay\", \"mandopop\", \"metal\", \"metal-misc\", \"metalcore\", \"minimal-techno\", \"movies\", \"mpb\", \"new-age\", \"new-release\", \"opera\", \"pagode\", \"party\", \"philippines-opm\", \"piano\", \"pop\", \"pop-film\", \"post-dubstep\", \"power-pop\", \"progressive-house\", \"psych-rock\", \"punk\", \"punk-rock\", \"r-n-b\", \"rainy-day\", \"reggae\", \"reggaeton\", \"road-trip\", \"rock\", \"rock-n-roll\", \"rockabilly\", \"romance\", \"sad\", \"salsa\", \"samba\", \"sertanejo\", \"show-tunes\", \"singer-songwriter\", \"ska\", \"sleep\", \"songwriter\", \"soul\", \"soundtracks\", \"spanish\", \"study\", \"summer\", \"swedish\", \"synth-pop\", \"tango\", \"techno\", \"trance\", \"trip-hop\", \"turkish\", \"work-out\", \"world-music\"];\nvar SPOTIFY_CLIENT_ID = 'eed31a43318f478ba48917070c9c3b37';\nvar SPOTIFY_CLIENT_SECRET = '3337a7d23626403399901e0f1e487a98';\nvar token;\nvar randomIndex = Math.floor(Math.random() * (genres.length - 1));\nfunction getToken() {\n  return _getToken.apply(this, arguments);\n}\nfunction _getToken() {\n  _getToken = _asyncToGenerator(function* () {\n    var auth = Buffer.from(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`).toString('base64');\n    try {\n      var response = yield axios({\n        method: 'post',\n        url: 'https://accounts.spotify.com/api/token',\n        data: qs.stringify({\n          grant_type: 'client_credentials'\n        }),\n        headers: {\n          'Authorization': `Basic ${auth}`,\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      console.log(response.data.access_token);\n      return response.data.access_token;\n    } catch (error) {\n      console.error(error);\n    }\n  });\n  return _getToken.apply(this, arguments);\n}\nexport function SpotifyRecommendations() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    token = _useState4[0],\n    setToken = _useState4[1];\n  useEffect(function () {\n    function getData() {\n      return _getData.apply(this, arguments);\n    }\n    function _getData() {\n      _getData = _asyncToGenerator(function* () {\n        if (token == '') {\n          token = yield getToken();\n        }\n        if (token != '') {\n          try {\n            var _randomIndex = Math.floor(Math.random() * (genres.length - 1));\n            var response = yield fetch(`https://api.spotify.com/v1/search?q=${genres[_randomIndex]}&type=album%2Cplaylist%2Cartist%2Ctrack`, {\n              method: 'GET',\n              headers: {\n                'Authorization': `Bearer ${token}`\n              }\n            });\n            var json = yield response.json();\n            console.log(json.tracks);\n            setData(json.tracks);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n      });\n      return _getData.apply(this, arguments);\n    }\n    getData();\n  }, []);\n  return {\n    data: data\n  };\n}\n;\nexport default SpotifyRecommendations;","map":{"version":3,"names":["React","useEffect","useState","Text","View","axios","qs","Buffer","global","genres","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","token","randomIndex","Math","floor","random","length","getToken","_getToken","apply","arguments","_asyncToGenerator","auth","from","toString","response","method","url","data","stringify","grant_type","headers","console","log","access_token","error","SpotifyRecommendations","_useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setToken","getData","_getData","fetch","json","tracks"],"sources":["E:/Aplicaciones/MudsicApp0.5/src/data/spotifyApi.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport { Buffer } from 'buffer';\r\nglobal.Buffer = Buffer;\r\n\r\n\r\nlet genres = [\r\n    \"acoustic\", \"afrobeat\", \"alt-rock\", \"alternative\", \"ambient\", \"anime\", \"black-metal\", \"bluegrass\", \"blues\", \"bossanova\", \"brazil\",\"breakbeat\",\"british\",\"cantopop\",\"chicago-house\",\"children\",\"chill\",\"classical\",\"club\",\"comedy\",\"country\",\"dance\",\"dancehall\",\"death-metal\",\"deep-house\",\"detroit-techno\",\"disco\",\"disney\",\"drum-and-bass\",\"dub\",\"dubstep\",\"edm\",\"electro\",\"electronic\",\"emo\",\"folk\",\"forro\",\"french\",\"funk\",\"garage\",\"german\",\"gospel\",\"goth\",\"grindcore\",\"groove\",\"grunge\",\"guitar\",\"happy\",\"hard-rock\",\"hardcore\",\"hardstyle\",\"heavy-metal\",\"hip-hop\",\"holidays\",\"honky-tonk\",\"house\",\"idm\",\"indian\",\"indie\",\"indie-pop\",\"industrial\",\"iranian\",\"j-dance\",\"j-idol\",\"j-pop\",\"j-rock\",\"jazz\",\"k-pop\",\"kids\",\"latin\",\"latino\",\"malay\",\"mandopop\",\"metal\",\"metal-misc\",\"metalcore\",\"minimal-techno\",\"movies\",\"mpb\",\"new-age\",\"new-release\",\"opera\",\"pagode\",\"party\",\"philippines-opm\",\"piano\",\"pop\",\"pop-film\",\"post-dubstep\",\"power-pop\",\"progressive-house\",\"psych-rock\",\"punk\",\"punk-rock\",\"r-n-b\",\"rainy-day\",\"reggae\",\"reggaeton\",\"road-trip\",\"rock\",\"rock-n-roll\",\"rockabilly\",\"romance\",\"sad\",\"salsa\",\"samba\",\"sertanejo\",\"show-tunes\",\"singer-songwriter\",\"ska\",\"sleep\",\"songwriter\",\"soul\",\"soundtracks\",\"spanish\",\"study\",\"summer\",\"swedish\",\"synth-pop\",\"tango\",\"techno\",\"trance\",\"trip-hop\",\"turkish\",\"work-out\",\"world-music\"\r\n]\r\nconst SPOTIFY_CLIENT_ID = 'eed31a43318f478ba48917070c9c3b37';\r\nconst SPOTIFY_CLIENT_SECRET = '3337a7d23626403399901e0f1e487a98';\r\nlet token\r\nconst randomIndex = Math.floor(Math.random() * (genres.length -1));\r\n\r\n\r\nasync function getToken() {\r\nconst auth = Buffer.from(`${SPOTIFY_CLIENT_ID}:${SPOTIFY_CLIENT_SECRET}`).toString('base64');\r\n    try {\r\n        const response = await axios({\r\n        method: 'post',\r\n        url: 'https://accounts.spotify.com/api/token',\r\n        data: qs.stringify({ grant_type: 'client_credentials' }),\r\n        headers: {\r\n            'Authorization': `Basic ${auth}`,\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        });\r\n        console.log(response.data.access_token)\r\n        return response.data.access_token\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\nexport function SpotifyRecommendations() {\r\n    const [data, setData] = useState({});\r\n    let [token, setToken] = useState('');\r\n    useEffect(() => {\r\n        async function getData(){\r\n            if (token == '') {\r\n                token = await getToken()\r\n            }\r\n            if (token != '') {\r\n                try {\r\n                    const randomIndex = Math.floor(Math.random() * (genres.length -1));\r\n                    const response = await fetch(`https://api.spotify.com/v1/search?q=${genres[randomIndex]}&type=album%2Cplaylist%2Cartist%2Ctrack`, {\r\n                            method: 'GET',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                    },\r\n                    });\r\n                    const json = await response.json();\r\n                    console.log(json.tracks)\r\n                    setData(json.tracks);\r\n                } catch (error) {\r\n                        // Espera el número de segundos especificado por Retry-After\r\n                        // let json = await new Promise(resolve => setTimeout(\r\n                        //     async () =>{\r\n                        //         const response = await fetch(`https://api.spotify.com/v1/recommendations?seed_genres=${genres[randomIndex]}`, {\r\n                        //             method: 'GET',\r\n                        //             headers: {\r\n                        //                 'Authorization': `Bearer ${token}`,\r\n                        //             },\r\n                        //             });\r\n                        //             const json = await response.json();\r\n                        //             return json\r\n                        //     }\r\n                        //     , 10000));\r\n                        // Intenta la solicitud nuevamente después de esperar\r\n                        console.error(error);\r\n                        // return json;\r\n                }\r\n            }\r\n        }\r\n        getData()\r\n        }, []);\r\n\r\n    return ({data});\r\n};\r\n\r\nexport default SpotifyRecommendations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}